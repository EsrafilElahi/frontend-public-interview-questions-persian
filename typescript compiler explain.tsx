کامپایل فرآیندی است که در آن کد منبع نوشته شده در یک زبان برنامه‌نویسی سطح بالا به زبان ماشین یا یک زبان قابل اجرا توسط پردازنده تبدیل می‌شود. این فرآیند می‌تواند در هر مرحله از چرخه توسعه نرم‌افزار رخ دهد، اعم از حالت توسعه (development) یا حالت تولید (production).

کامپایل در حالت توسعه
در حالت توسعه، کامپایل معمولاً به صورت دینامیک و مستمر اتفاق می‌افتد. به این معنی که هر بار که توسعه‌دهنده تغییراتی در کد ایجاد می‌کند، کامپایلر به صورت خودکار کد را پردازش می‌کند تا توسعه‌دهنده بتواند به سرعت خطاها را شناسایی کند و از عملکرد برنامه مطمئن شود. این فرآیند به ویژه در محیط‌های توسعه یکپارچه (IDE) رخ می‌دهد که کامپایلر به صورت داخلی کار می‌کند.

کامپایل در حالت تولید
در حالت تولید، کامپایل معمولاً به صورت یک‌بار برای همیشه انجام می‌شود. به این معنی که پس از اتمام توسعه و تست برنامه، کد نهایی کامپایل می‌شود و خروجی آن به عنوان یک برنامه قابل اجرا در اختیار کاربران قرار می‌گیرد. در این مرحله، کامپایلر تلاش می‌کند تا کد را بهینه کند تا از نظر عملکرد و کارایی بهینه باشد.

مثال از یک سایت در دسترس عموم
در مورد یک سایت مانند اکالا که در دسترس عموم قرار گرفته است، فرآیند کامپایل معمولاً قبل از انتشار در محیط تولید انجام می‌شود. به این معنی که پس از توسعه و تست کامل برنامه، کد منبع کامپایل می‌شود و خروجی آن به عنوان یک برنامه وب قابل اجرا در اختیار کاربران قرار می‌گیرد. در این مرحله، کامپایلر به صورت یک‌بار برای همیشه کار می‌کند و خروجی آن به صورت یک برنامه وب بهینه شده است که در سرورهای وب قرار می‌گیرد.

نکته مهم
در برخی موارد، مانند استفاده از زبان‌های برنامه‌نویسی جاوااسکریپت در محیط وب، کامپایل به صورت جست‌وجو (Just-In-Time) رخ می‌دهد. به این معنی که کد جاوااسکریپت در زمان اجرا توسط موتور جاوااسکریپت مرورگر کامپایل می‌شود. با این حال، در بسیاری از موارد، کامپایل قبل از انتشار در محیط تولید انجام می‌شود تا از کارایی و امنیت برنامه اطمینان حاصل شود.

خلاصه
کامپایل در توسعه: به صورت دینامیک و مستمر برای شناسایی خطاها و تست عملکرد.

کامپایل در تولید: به صورت یک‌بار برای همیشه برای تولید یک برنامه قابل اجرا بهینه.

مثال سایت اکالا: کامپایل قبل از انتشار در محیط تولید انجام می‌شود.


برای مدیریت داده‌هایی که از سرور دریافت می‌شوند و ممکن است در محیط تولید (production) با تایپ‌های تعیین شده در TypeScript ناسازگار باشند، می‌توانید از راهکارهای زیر استفاده کنید:

۱. اعتبارسنجی Runtime با کتابخانه‌های تخصصی
از کتابخانه‌هایی مانند Zod، io-ts یا Yup برای اعتبارسنجی داده‌ها در زمان اجرا (runtime) استفاده کنید. این کتابخانه‌ها امکان تعریف Schema برای داده‌ها و بررسی تطابق آن با تایپ‌های مورد انتظار را فراهم می‌کنند.


* تایپ اسکریپت در حالت توسعه به شما کمک می‌کند تا خطاهای تایپی را زودتر تشخیص دهید و کدهای باکیفیت‌تری بنویسید. در حالت تولید (production)، تایپ اسکریپت به جاوااسکریپت تبدیل می‌شود و اطلاعات تایپی در خروجی نهایی وجود ندارند.
